MODULE main

VAR
    i                                                                                                    : input(o.Loc_Server_0, o.Loc_Server_1, o.Pong_Server_Client, o.Pongo_Server_Client, o.current_object);
    o                                                                                                    : output(i.active_0, i.active_1, i.Ping_Client_Server, i.gbuchi, i.envreq, i.Loc_Client_0, i.Loc_Client_1);

MODULE input (Loc_Server_0, Loc_Server_1, Pong_Server_Client, Pongo_Server_Client, current_object)

VAR
    Ping_Client_Server                                                                                   : boolean;
    gbuchi                                                                                               : 0..2;
    active_0                                                                                             : boolean;
    active_1                                                                                             : boolean;
    envreq                                                                                               : {Client};
    Loc_Client_0                                                                                         : {L0, L1, L3, L4};
    Loc_Client_1                                                                                         : {L0, L1, L3, L4};

ASSIGN
    init(Ping_Client_Server)                                                                             := 0;
    init(Loc_Client_0)                                                                                   := L0;
    init(Loc_Client_1)                                                                                   := L0;
    init(gbuchi)                                                                                         := 0;
    init(active_0)                                                                                       := 0;
    init(active_1)                                                                                       := 0;
    init(envreq)                                                                                         := {Client};
    next(gbuchi) := case
        gbuchi = 0                                                                                       : 1;
        gbuchi = 1 & active_0 = 0 & active_1 = 0                                                         : 2;
        gbuchi = 2 & (current_object = Client)                                                           : 0;
        1                                                                                                : gbuchi;
    esac;
    next(Ping_Client_Server) := case
        next(current_object) != Client                                                                   : 0;
        next(Pong_Server_Client) = 0 & next(Pongo_Server_Client) = 0 & active_0 = 0 & active_1 = 0       : {0, 1};
        1                                                                                                : 0;
    esac;
    next(active_0) := case
        active_0 = 0 & next(Loc_Server_0) = L1 & next(Loc_Client_0) = L1                                 : 1;
        active_0 = 1 & next(Loc_Server_0) = L4 & next(Loc_Client_0) = L4                                 : 0;
        1                                                                                                : active_0;
    esac;
    next(active_1) := case
        active_1 = 0 & next(Loc_Server_1) = L1 & next(Loc_Client_1) = L1                                 : 1;
        active_1 = 1 & next(Loc_Server_1) = L4 & next(Loc_Client_1) = L4                                 : 0;
        1                                                                                                : active_1;
    esac;
    next(Loc_Client_0) := case
        active_0 = 1 & next(active_0) = 0                                                                : L0;
        Loc_Client_0 = L0 & Loc_Server_0 = L0 & next(Loc_Server_0) = L1 & next(Ping_Client_Server) = 1   : L1;
        Loc_Client_0 = L1 & Loc_Server_0 = L1 & next(Loc_Server_0) = L3 & next(Pong_Server_Client) = 1   : L3;
        Loc_Client_0 = L3 & Loc_Server_0 = L3 & next(Loc_Server_0) = L4 & next(Pongo_Server_Client) = 1  : L4;
        active_0 = 0 & 
        (((Loc_Server_0 != L1 | Loc_Client_0 != L1) & next(Pong_Server_Client) = 1) | ((Loc_Server_0 != L3 | Loc_Client_0 != L3) & next(Pongo_Server_Client) = 1) | ((Loc_Client_0 != L0 | Loc_Server_0 != L0) & next(Ping_Client_Server) = 1))   : L0;
        1                                                                                                : Loc_Client_0;
    esac;
    next(Loc_Client_1) := case
        active_1 = 1 & next(active_1) = 0                                                                : L0;
        Loc_Client_1 = L0 & Loc_Server_1 = L0 & next(Loc_Server_1) = L1 & next(Ping_Client_Server) = 1   : L1;
        Loc_Client_1 = L1 & Loc_Server_1 = L1 & next(Loc_Server_1) = L3 & next(Pongo_Server_Client) = 1  : L3;
        Loc_Client_1 = L3 & Loc_Server_1 = L3 & next(Loc_Server_1) = L4 & next(Pong_Server_Client) = 1   : L4;
        active_1 = 0 & 
        (((Loc_Server_1 != L3 | Loc_Client_1 != L3) & next(Pong_Server_Client) = 1) | ((Loc_Server_1 != L1 | Loc_Client_1 != L1) & next(Pongo_Server_Client) = 1) | ((Loc_Client_1 != L0 | Loc_Server_1 != L0) & next(Ping_Client_Server) = 1))   : L0;
        1                                                                                                : Loc_Client_1;
    esac;

MODULE output (active_0, active_1, Ping_Client_Server, gbuchi, envreq, Loc_Client_0, Loc_Client_1)

VAR
    Pong_Server_Client                                                                                   : boolean;
    Pongo_Server_Client                                                                                  : boolean;
    Loc_Server_0                                                                                         : {L0, L1, L3, L4};
    Loc_Server_1                                                                                         : {L0, L1, L3, L4};
    current_object                                                                                       : {Server, Client};

ASSIGN
    init(Pong_Server_Client)                                                                             := 0;
    init(Pongo_Server_Client)                                                                            := 0;
    init(current_object)                                                                                 := {envreq, Server};
    init(Loc_Server_0)                                                                                   := L0;
    init(Loc_Server_1)                                                                                   := L0;
    next(current_object) := case
        1                                                                                                : {envreq, Server};
    esac;
    next(Pong_Server_Client) := case
        next(current_object) != Server                                                                   : 0;
        (active_0 = 1 | active_1 = 1) & 
        (active_0 = 0 | (Loc_Server_0 = L1 & Loc_Client_0 = L1 & next(Loc_Server_0) = L3 & next(Loc_Client_0) = L3)) & 
        (active_1 = 0 | (Loc_Server_1 = L3 & Loc_Client_1 = L3 & next(Loc_Server_1) = L4 & next(Loc_Client_1) = L4)) & 
        next(Ping_Client_Server) = 0 & next(Pongo_Server_Client) = 0                                      : 1;
        1                                                                                                : 0;
    esac;
    next(Pongo_Server_Client) := case
        next(current_object) != Server                                                                   : 0;
        (active_0 = 1 | active_1 = 1) & 
        (active_0 = 0 | (Loc_Server_0 = L3 & Loc_Client_0 = L3 & next(Loc_Server_0) = L4 & next(Loc_Client_0) = L4)) & 
        (active_1 = 0 | (Loc_Server_1 = L1 & Loc_Client_1 = L1 & next(Loc_Server_1) = L3 & next(Loc_Client_1) = L3)) & 
        next(Ping_Client_Server) = 0 & next(Pong_Server_Client) = 0                                       : 1;
        1                                                                                                : 0;
    esac;
    next(Loc_Server_0) := case
        active_0 = 1 & next(active_0) = 0                                                                : L0;
        Loc_Server_0 = L1 & Loc_Client_0 = L1 & next(Loc_Client_0) = L3 & next(Pong_Server_Client) = 1   : L3;
        Loc_Server_0 = L3 & Loc_Client_0 = L3 & next(Loc_Client_0) = L4 & next(Pongo_Server_Client) = 1  : L4;
        Loc_Server_0 = L0 & Loc_Client_0 = L0 & next(Loc_Client_0) = L1 & next(Ping_Client_Server) = 1   : L1;
        active_0 = 0 & 
        (((Loc_Server_0 != L1 | Loc_Client_0 != L1) & next(Pong_Server_Client) = 1) | ((Loc_Server_0 != L3 | Loc_Client_0 != L3) & next(Pongo_Server_Client) = 1) | ((Loc_Client_0 != L0 | Loc_Server_0 != L0) & next(Ping_Client_Server) = 1))   : L0;
        1                                                                                                : Loc_Server_0;
    esac;
    next(Loc_Server_1) := case
        active_1 = 1 & next(active_1) = 0                                                                : L0;
        Loc_Server_1 = L1 & Loc_Client_1 = L1 & next(Loc_Client_1) = L3 & next(Pongo_Server_Client) = 1  : L3;
        Loc_Server_1 = L3 & Loc_Client_1 = L3 & next(Loc_Client_1) = L4 & next(Pong_Server_Client) = 1   : L4;
        Loc_Server_1 = L0 & Loc_Client_1 = L0 & next(Loc_Client_1) = L1 & next(Ping_Client_Server) = 1   : L1;
        active_1 = 0 & 
        (((Loc_Server_1 != L3 | Loc_Client_1 != L3) & next(Pong_Server_Client) = 1) | ((Loc_Server_1 != L1 | Loc_Client_1 != L1) & next(Pongo_Server_Client) = 1) | ((Loc_Client_1 != L0 | Loc_Server_1 != L0) & next(Ping_Client_Server) = 1))   : L0;
        1                                                                                                : Loc_Server_1;
    esac;

