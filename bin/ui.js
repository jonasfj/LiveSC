// Generated by CoffeeScript 1.3.3
(function() {
  var Toolbar, editor, floatright, toolbar, _ref;

  if ((_ref = this.LSC) == null) {
    this.LSC = {};
  }

  this.LSC.Toolbar = Toolbar = {};

  toolbar = null;

  editor = null;

  Toolbar.initialize = function() {
    var edit, lower, raise, unedit;
    toolbar = $("<span>Untitled</span>");
    toolbar.addClass("filename");
    toolbar.appendTo("#toolbar");
    raise = function() {
      return toolbar.css({
        cursor: "text",
        opacity: .50
      });
    };
    lower = function() {
      return toolbar.css({
        cursor: "arrow",
        opacity: 1.0
      });
    };
    unedit = function() {
      var name;
      name = editor.val();
      if (name === "") {
        return;
      }
      toolbar.html(name);
      setDocTitle(name);
      toolbar.css({
        visibility: "visible"
      });
      editor.remove();
      return editor = null;
    };
    edit = function() {
      var text,
        _this = this;
      if (editor == null) {
        editor = $("<input type='text'/>");
        editor.css({
          left: cfg.margin,
          top: cfg.margin + 2,
          width: toolbar.width(),
          background: "#ccc",
          height: 12
        });
        editor.addClass("editor centered");
        $("body").append(editor);
        text = toolbar.html();
        toolbar.css({
          visibility: "hidden"
        });
        return editor.val(text).focus().select().blur(unedit).keypress(function(event) {
          if (event.keyCode === 13) {
            return unedit();
          }
        });
      }
    };
    toolbar.hover(raise, lower);
    return toolbar.click(edit);
  };

  Toolbar.setTitle = function(title) {
    return toolbar.html(title);
  };

  Toolbar.getTitle = function() {
    return toolbar.html();
  };

  this.LSC.Separator = function() {
    var div;
    div = $("<div></div>");
    div.addClass("separator");
    return div.appendTo("#toolbar");
  };

  floatright = false;

  this.LSC.FloatRight = function() {
    return floatright = true;
  };

  this.LSC.Button = function(button) {
    var div, help, icon, img, imgp, ipaper, lower, p, paper, raise, rect, text;
    if (Icons[button.icon] != null) {
      p = Icons[button.icon];
    } else {
      p = LSC.Icons[button.icon];
    }
    div = $("<div></div>");
    div.addClass("toolbaritem");
    div.appendTo("#toolbar");
    if (floatright) {
      div.css({
        float: "right"
      });
    }
    paper = Raphael(div[0], 40, 40);
    icon = paper.path(p);
    icon.attr({
      fill: "#777",
      stroke: "#fff",
      "stroke-opacity": 0
    });
    icon.translate(4, 4);
    rect = paper.rect(0, 0, 40, 40);
    rect.attr({
      fill: "#fff",
      opacity: 0,
      title: button.tooltip,
      cursor: "pointer"
    });
    raise = function() {
      return icon.animate({
        fill: "#333",
        "stroke-opacity": 0
      }, 100);
    };
    lower = function() {
      return icon.animate({
        fill: "#777",
        "stroke-opacity": 0
      }, 200);
    };
    rect.hover(raise, lower);
    rect.click(button.action);
    help = $("<div></div>");
    help.addClass("infoitem");
    help.appendTo("#infolist");
    img = $("<div></div>");
    img.addClass("infoicon");
    img.appendTo(help);
    ipaper = Raphael(img[0], 80, 80);
    imgp = ipaper.path(p);
    imgp.translate(16, 16);
    imgp.scale(2.0);
    imgp.attr({
      fill: "#777",
      stroke: "#fff",
      "stroke-opacity": 0
    });
    text = $("<div></div>");
    text.html(button.help);
    text.addClass("infotext");
    return text.appendTo(help);
  };

}).call(this);
