// Generated by CoffeeScript 1.3.3
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  if ((_ref = this.LSC) == null) {
    this.LSC = {};
  }

  this.LSC.Sidebar = (function() {

    function Sidebar(parent) {
      this.parent = parent;
      this.clear = __bind(this.clear, this);

      this.removeEntry = __bind(this.removeEntry, this);

      this.updateEntry = __bind(this.updateEntry, this);

    }

    Sidebar.prototype.addEntry = function(index, name, switcher, remover) {
      this.entry = $("<div class='item'><span>" + name + "</span></div>");
      this.remover = $("<span>x</span>");
      this.remover.css({
        float: "right",
        opacity: .25,
        width: "20px",
        "text-align": "center"
      });
      this.remover.hover(function() {
        return $(this).css({
          opacity: 1.0,
          "border-radius": "20%",
          background: "#fff"
        });
      }, function() {
        return $(this).css({
          "border-radius": "0",
          background: "none",
          opacity: .25
        });
      });
      this.remover.appendTo(this.entry);
      this.entry.appendTo(this.parent);
      this.entry.data("index", index);
      this.entry.click(function() {
        return typeof switcher === "function" ? switcher(index) : void 0;
      });
      return this.remover.click(function() {
        if (confirm("You are about to delete a chart, proceed?")) {
          if (typeof remover === "function") {
            remover(index);
          }
          return $(this).parent().remove();
        }
      });
    };

    Sidebar.prototype.updateEntry = function(index, name) {
      return this.parent.children().each(function() {
        if ($(this).data("index") === index) {
          return $(this).children("span:first").html(name);
        }
      });
    };

    Sidebar.prototype.removeEntry = function(index) {
      return this.parent.children().each(function() {
        if ($(this).data("index") === index) {
          return $(this).remove();
        }
      });
    };

    Sidebar.prototype.clear = function() {
      return this.parent.children().each(function() {
        return $(this).remove();
      });
    };

    return Sidebar;

  })();

}).call(this);
